vault:
  server:
    volumes:
      - name: rootca
        secret:
          secretName: rootca
      - name: tls-server
        secret:
          secretName: tls-server 
    volumeMounts:
      - mountPath: /vault/userconfig/rootCA
        name: rootca
        readOnly: true
      - mountPath: /vault/userconfig/tls-server
        name: tls-server
        readOnly: true
    extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/rootCA/rootCACert.pem
    standalone:
      enabled: false
    service:
      annotations:
        service.cilium.io/global: "true"
    ha:
      enabled: true
      raft:
        enabled: true
      config: |
        ui = true
        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
          tls_key_file = "/vault/userconfig/tls-server/tls.key"
          tls_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
        }

        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal.vault.svc.cluster.local:8200&quot;
            leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
          }

          retry_join {
            leader_api_addr = "http://vault-1.vault-internal.vault.svc.cluster.local:8200&quot;
            leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
          }

          retry_join {
            leader_api_addr = "http://vault-2.vault-internal.vault.svc.cluster.local:8200&quot;
            leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
          }

          autopilot {
            cleanup_dead_servers = "true"
            last_contact_threshold = "200ms"
            last_contact_failure_threshold = "10m"
            max_trailing_logs = 250000
            min_quorum = 5
            server_stabilization_time = "10s"
          }
        }
        
        service_registration "kubernetes" {}

    
    dataStorage:
      enabled: true
      storageClass: longhorn
  ui:
    enabled: true
    serviceType: LoadBalancer
    httproute:
      enabled: true
      hostname: vault.k8s.labs.ahinh.me
      parentRefs:
        gatewayName: k8s-labs
        sectionName: https
        namespace: nginx-gateway
      pathType: PathPrefix
      path: /