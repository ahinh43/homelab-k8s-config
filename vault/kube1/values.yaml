vault:
  global:
    tlsDisable: false
  server:
    ingress:
      https: true
      enabled: true
      ingressClassName: nginx
      hosts:
        - vault.k8s.labs.ahinh.me
        - vault.local.k8s.labs.ahinh.me
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        external-dns.alpha.kubernetes.io/hostname: vault.k8s.labs.ahinh.me
      tls:
        - hosts:
          - vault.k8s.labs.ahinh.me
          - vault.local.k8s.labs.ahinh.me
          secretName: vault-cert-tls
    volumes:
      - name: rootca
        secret:
          secretName: rootca
      - name: tls-server
        secret:
          secretName: tls-server
      - name: vault-gcp-kms-serviceaccount
        secret:
          secretName: vault-gcp-kms-serviceaccount
    volumeMounts:
      - mountPath: /vault/userconfig/rootCA
        name: rootca
        readOnly: true
      - mountPath: /vault/userconfig/tls-server
        name: tls-server
        readOnly: true
      - mountPath: /vault/userconfig/gcp
        name: vault-gcp-kms-serviceaccount
        readOnly: true
    extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/rootCA/rootCACert.pem
    standalone:
      enabled: false
    service:
      annotations:
        service.cilium.io/global: "true"
    ha:
      enabled: true
      apiAddr: https://127.0.0.1:8200
      clusterAddr: "https://$(HOSTNAME).vault-internal.vault.svc.cluster.local:8201"
      raft:
        enabled: true
        config: |
          ui = true
          listener "tcp" {
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
            tls_key_file = "/vault/userconfig/tls-server/tls.key"
            tls_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
          }
          seal "gcpckms" {
            credentials = "/vault/userconfig/gcp/vault-project-user-creds.json"
            project     = "ahinh-homelab"
            region      = "global"
            key_ring    = "vault-keyring"
            crypto_key  = "vault-key"
          }

          storage "raft" {
            path = "/vault/data"
            retry_join {
              leader_api_addr = "https://vault-0.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
              leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            }

            retry_join {
              leader_api_addr = "https://vault-1.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
              leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            }

            retry_join {
              leader_api_addr = "https://vault-2.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/rootCA/rootCACert.pem"
              leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
              leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            }

            autopilot {
              cleanup_dead_servers = "true"
              last_contact_threshold = "200ms"
              last_contact_failure_threshold = "10m"
              max_trailing_logs = 250000
              min_quorum = 5
              server_stabilization_time = "10s"
            }
          }
          
          service_registration "kubernetes" {}

      
    dataStorage:
      enabled: true
      storageClass: csi-rbd-sc
  ui:
    enabled: true
    serviceType: LoadBalancer