keycloak:
  production: true
  proxy: passthrough
  postgresql:
    enabled: false
  http:
    enabled: false
  tls:
    enabled: true
    autoGenerated: true
  service:
    type: LoadBalancer
    annotations:
      service.cilium.io/global: "true"
    headless:
      annotations:
        service.cilium.io/global: "true"
  externalDatabase:
    port: 5432
    database: postgres
    existingSecretUserKey: username
    existingSecretPasswordKey: password
  replicaCount: 3
  extraEnvVars:
    # Enable DNS_PING to find other Pods
    - name: JGROUPS_DISCOVERY_PROTOCOL
      value: dns.DNS_PING
    # Set DNS Name to keycloak-headless service
    - name: JGROUPS_DISCOVERY_PROPERTIES
      value: "dns_query=keycloak-headless.keycloak.svc.cluster.local"
    - name: CACHE_OWNERS_COUNT
      value: "2"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "2"
    # Allows use of a LoadBalancer
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
  extraVolumes:
    - name: startup
      configMap:
        name: keycloak-startup
        defaultMode: 0555
  extraVolumeMounts:
    - name: startup
      mountPath: "/opt/jboss/startup-scripts"
      readOnly: true
  ingress:
    enabled: true
    hostname: keycloak.k8s.labs.ahinh.me
    extraHosts:
      - name: keycloak.local.k8s.labs.ahinh.me
        path: /
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      external-dns.alpha.kubernetes.io/hostname: keycloak.k8s.labs.ahinh.me
      nginx.ingress.kubernetes.io/service-upstream: "true"
    tls: false
    extraTls:
      - hosts:
          - keycloak.k8s.labs.ahinh.me
          - keycloak.local.k8s.labs.ahinh.me
        secretName: keycloak.k8s.labs.ahinh.me-tls
    ingressClassName: nginx
    servicePort: https
  auth:
    adminUser: admin
  logging:
    level: INFO

postgresOperator:
  createDatabase: true
  createService: false
  size: "4Gi"
  numberOfInstances: 3
