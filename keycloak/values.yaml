keycloak:
  production: false
  proxy: edge
  postgresql:
    enabled: false
  http:
    enabled: true
  tls:
    enabled: false
    autoGenerated: true
  service:
    type: LoadBalancer
    annotations:
      service.cilium.io/global: "true"
    headless:
      annotations:
        service.cilium.io/global: "true"
  externalDatabase:
    port: 5432
    database: postgres
    existingSecretUserKey: username
    existingSecretPasswordKey: password
  replicaCount: 1
  extraEnvVars:
    # Enable DNS_PING to find other Pods
    - name: JGROUPS_DISCOVERY_PROTOCOL
      value: dns.DNS_PING
    # Set DNS Name to keycloak-headless service
    - name: JGROUPS_DISCOVERY_PROPERTIES
      value: "dns_query=keycloak-headless.keycloak.svc.cluster.local"
    - name: CACHE_OWNERS_COUNT
      value: '2'
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: '2'
    # Allows use of a LoadBalancer
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_FRONTEND_URL
      value: https://keycloak.k8s.labs.ahinh.me
    - name: KEYCLOAK_EXTRA_ARGS
      value: "-Dkeycloak.frontendUrl=https://keycloak.k8s.labs.ahinh.me"
  extraVolumes:
    - name: startup
      configMap:
        name: keycloak-startup
        defaultMode: 0555
  extraVolumeMounts:
    - name: startup
      mountPath: "/opt/jboss/startup-scripts"
      readOnly: true
  ingress:
    enabled: true
    hostname: keycloak.k8s.labs.ahinh.me
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      external-dns.alpha.kubernetes.io/hostname: keycloak.k8s.labs.ahinh.me
    tls: true
    secrets: 
      - keycloak-cert-tls
    ingressClassName: nginx

postgresOperator:
  createDatabase: true
  createService: false
  size: "4Gi"
  numberOfInstances: 2