prometheus:
  alertmanager:
    ingress:
      enabled: true
      hosts:
        - alertmanager.k8s.labs.ahinh.me
      ingressClassName: nginx
      pathType: ImplementationSpecific
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        external-dns.alpha.kubernetes.io/hostname: alertmanager.k8s.labs.ahinh.me
      tls:
        - hosts:
            - alertmanager.k8s.labs.ahinh.me
          secretName: alertmanager-cert-tls
  grafana:
    ingress:
      enabled: true
      hosts:
        - grafana.k8s.labs.ahinh.me
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        external-dns.alpha.kubernetes.io/hostname: grafana.k8s.labs.ahinh.me
      tls:
        - hosts:
            - grafana.k8s.labs.ahinh.me
          secretName: grafana-cert-tls
    # additionalDataSources:
    #   - name: loki
    #     type: 'loki'
    #     access: 'proxy'
    #     org_id: 1
    #     url: 'http://loki.loki:3100'
    #     version: 1
    #     editable: false
  prometheus:
    thanosService:
      enabled: true
    thanosRuler:
      enabled: true
    thanosIngress:
      enabled: true
      hosts:
        - thanos.k8s.labs.ahinh.me
      ingressClassName: nginx
      pathType: ImplementationSpecific
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        external-dns.alpha.kubernetes.io/hostname: thanos.k8s.labs.ahinh.me
      tls:
        - hosts:
            - thanos.k8s.labs.ahinh.me
          secretName: thanos-cert-tls
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      thanos:
        objectStorageConfig:
          existingSecret:
            name: prometheus-thanos-s3
            key: cloud

    service:
      annotations:
        service.cilium.io/global: "true"

  prometheusOperator:
    service:
      annotations:
        service.cilium.io/global: "true"
